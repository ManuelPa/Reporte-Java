/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tablasdi;

import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRExporter;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.export.JRPdfExporter;
import net.sf.jasperreports.engine.util.JRLoader;

/**
 *
 * @author pc
 */
public class TablasDI extends javax.swing.JFrame {

    /**
     * Creates new form TablasDI
     */
    public TablasDI() {
        initComponents();
        error.setVisible(false);
        reload();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        nombre = new javax.swing.JTextField();
        apellidos = new javax.swing.JTextField();
        edad = new javax.swing.JTextField();
        nif = new javax.swing.JTextField();
        tabladeportes = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tfutbol = new javax.swing.JTable();
        impfut = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbaloncesto = new javax.swing.JTable();
        impbalon = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ttenis = new javax.swing.JTable();
        imptenis = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        nbaloncesto = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        nfutbol = new javax.swing.JTextField();
        ntenis = new javax.swing.JTextField();
        error = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        deportes = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(51, 102, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Tablas deportes.");

        jLabel2.setText("Nombre:");

        jLabel3.setText("Apellidos:");

        jLabel4.setText("Edad:");

        jLabel5.setText("NIF:");

        apellidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apellidosActionPerformed(evt);
            }
        });

        tfutbol.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Apellidos", "NIF", "Edad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tfutbol);

        impfut.setText("Imprimir");
        impfut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                impfutMouseClicked(evt);
            }
        });
        impfut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                impfutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(impfut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(impfut)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabladeportes.addTab("Futbol", jPanel1);

        tbaloncesto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Apellidos", "NIF", "Edad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tbaloncesto);

        impbalon.setText("Imprimir");
        impbalon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                impbalonMouseClicked(evt);
            }
        });
        impbalon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                impbalonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(impbalon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(impbalon, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE))
        );

        tabladeportes.addTab("Baloncesto", jPanel2);

        ttenis.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Apellidos", "NIF", "Edad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(ttenis);

        imptenis.setText("Imprimir");
        imptenis.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imptenisMouseClicked(evt);
            }
        });
        imptenis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imptenisActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(imptenis, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(imptenis)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE))
        );

        tabladeportes.addTab("Tenis", jPanel3);

        jButton1.setText("Insertar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Borrar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Salir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Nº de Registros:");

        nbaloncesto.setEditable(false);
        nbaloncesto.setText("0");

        jLabel7.setText("Baloncesto:");

        jLabel8.setText("Fútbol:");

        jLabel9.setText("Tenis:");

        nfutbol.setEditable(false);
        nfutbol.setText("0");

        ntenis.setEditable(false);
        ntenis.setText("0");

        error.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        error.setForeground(new java.awt.Color(204, 0, 0));
        error.setText("Error al introducir los datos.");

        jLabel10.setText("Deportes:");

        deportes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Futbol", "Baloncesto", "Tenis" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(apellidos))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(edad))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(nif))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(nombre))
                        .addComponent(error)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel10)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(deportes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nbaloncesto, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nfutbol, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ntenis, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 72, Short.MAX_VALUE))
                    .addComponent(tabladeportes, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(apellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(edad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(nif, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(deportes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(error)
                        .addGap(50, 50, 50))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tabladeportes, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jLabel6)
                    .addComponent(nbaloncesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9)
                    .addComponent(ntenis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nfutbol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void apellidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apellidosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_apellidosActionPerformed
    private void reload() { 
        try {
            Connection conexion = DriverManager.getConnection("jdbc:mysql://localhost:3306/deportes", "root", "root");

            DefaultTableModel modelb = (DefaultTableModel) tbaloncesto.getModel();
            PreparedStatement usb = conexion.prepareStatement("SELECT * FROM baloncesto");
            ResultSet reb = usb.executeQuery();
            Object datosb[] = new Object[4];
            int registrosb = 0;
            while (reb.next()) {
                for (int i = 0; i < 4; i++) {
                    datosb[i] = reb.getObject(i + 2);
                }
                modelb.addRow(datosb);
                registrosb++;
            }
            nbaloncesto.setText("" + registrosb);

            DefaultTableModel modelf = (DefaultTableModel) tfutbol.getModel();
            PreparedStatement usf = conexion.prepareStatement("SELECT * FROM futbol");
            ResultSet ref = usf.executeQuery();
            Object datosf[] = new Object[4];
            int registrosf = 0;
            while (ref.next()) {
                for (int i = 0; i < 4; i++) {
                    datosf[i] = ref.getObject(i + 2);
                }
                modelf.addRow(datosf);
                registrosf++;
            }
            nfutbol.setText("" + registrosf);

            DefaultTableModel modelt = (DefaultTableModel) ttenis.getModel();
            PreparedStatement ust = conexion.prepareStatement("SELECT * FROM tenis");
            ResultSet ret = ust.executeQuery();
            Object datost[] = new Object[4];
            int registrost = 0;
            while (ret.next()) {
                for (int i = 0; i < 4; i++) {
                    datost[i] = ret.getObject(i + 2);
                }
                registrost++;
                modelt.addRow(datost);
            }
            ntenis.setText("" + registrost);
            ret.close();

        } catch (SQLException ex) {
            Logger.getLogger(TablasDI.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            Connection conexion = DriverManager.getConnection("jdbc:mysql://localhost:3306/deportes", "root", "root");
            int idFila = tbaloncesto.getSelectedRow();
            if (idFila == -1) {
                idFila = tfutbol.getSelectedRow();
                if (idFila == -1) {
                    idFila = ttenis.getSelectedRow();
                    if (idFila == -1) {
                        error.setText("Debes seleccionar un registro para poder borrarlo.");
                        error.setVisible(true);
                    } else {
                        DefaultTableModel model = (DefaultTableModel) ttenis.getModel();
                        try {
                            String nift = (String) model.getValueAt(idFila, 2);
                            PreparedStatement us = conexion.prepareStatement("DELETE FROM tenis WHERE NIF = ? ");
                            us.setString(1, nift);
                            us.executeUpdate();
                        } catch (SQLException ex) {
                            System.out.println(ex);
                        }
                        model.removeRow(idFila);
                        ntenis.setText("" + ttenis.getRowCount());
                        error.setVisible(false);
                    }
                } else {
                    DefaultTableModel model = (DefaultTableModel) tfutbol.getModel();
                    try {
                        String niff = (String) model.getValueAt(idFila, 2);
                        PreparedStatement us = conexion.prepareStatement("DELETE FROM futbol WHERE NIF = ? ");
                        us.setString(1, niff);
                        us.executeUpdate();
                    } catch (SQLException ex) {
                        System.out.println(ex);
                    }
                    model.removeRow(idFila);
                    nfutbol.setText("" + tfutbol.getRowCount());
                    error.setVisible(false);
                }
            } else {
                DefaultTableModel model = (DefaultTableModel) tbaloncesto.getModel();
                try {
                    String nifb = (String) model.getValueAt(idFila, 2);
                    PreparedStatement us = conexion.prepareStatement("DELETE FROM baloncesto WHERE NIF = ? ");
                    us.setString(1, nifb);
                    us.executeUpdate();
                } catch (SQLException ex) {
                    System.out.println(ex);
                }
                model.removeRow(idFila);
                nbaloncesto.setText("" + tbaloncesto.getRowCount());
                error.setVisible(false);
            }
        } catch (SQLException ex) {
            Logger.getLogger(TablasDI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (!apellidos.getText().equals("") && !nombre.getText().equals("") && !nif.getText().equals("") && !edad.getText().equals("") && esEntero(edad.getText())) {
            String aux = (String) deportes.getSelectedItem();
            try {
                Connection conexion = DriverManager.getConnection("jdbc:mysql://localhost:3306/deportes", "root", "root");
                switch (aux) {
                    case "Baloncesto":
                        DefaultTableModel modelb = (DefaultTableModel) tbaloncesto.getModel();
                        try {
                            PreparedStatement us = conexion.prepareStatement("INSERT INTO baloncesto (nombre, apellidos, nif, edad) values (?, ?, ?, ?)");
                            us.setString(1, nombre.getText());
                            us.setString(2, apellidos.getText());
                            us.setString(3, nif.getText());
                            us.setString(4, edad.getText());
                            us.executeUpdate();
                            modelb.addRow(new Object[]{nombre.getText(), apellidos.getText(), edad.getText(), nif.getText()});
                        } catch (SQLException ex) {
                            System.out.println(ex);
                        }
                        tabladeportes.setSelectedIndex(0);
                        nombre.setText("");
                        apellidos.setText("");
                        nif.setText("");
                        edad.setText("");
                        nbaloncesto.setText("" + tbaloncesto.getRowCount());
                        break;
                    case "Futbol":
                        DefaultTableModel modelf = (DefaultTableModel) tfutbol.getModel();
                        try {
                            PreparedStatement us = conexion.prepareStatement("INSERT INTO futbol (nombre, apellidos, nif, edad) values (?, ?, ?, ?)");
                            us.setString(1, nombre.getText());
                            us.setString(2, apellidos.getText());
                            us.setString(3, nif.getText());
                            us.setString(4, edad.getText());
                            us.executeUpdate();
                            modelf.addRow(new Object[]{nombre.getText(), apellidos.getText(), edad.getText(), nif.getText()});
                        } catch (SQLException ex) {
                            System.out.println(ex);
                        }
                        tabladeportes.setSelectedIndex(0);
                        nombre.setText("");
                        apellidos.setText("");
                        nif.setText("");
                        edad.setText("");
                        nfutbol.setText("" + tfutbol.getRowCount());
                        break;
                    case "Tenis":
                        DefaultTableModel modelt = (DefaultTableModel) ttenis.getModel();
                        try {
                            PreparedStatement us = conexion.prepareStatement("INSERT INTO tenis (nombre, apellidos, nif, edad) values (?, ?, ?, ?)");
                            us.setString(1, nombre.getText());
                            us.setString(2, apellidos.getText());
                            us.setString(3, nif.getText());
                            us.setString(4, edad.getText());
                            us.executeUpdate();
                            modelt.addRow(new Object[]{nombre.getText(), apellidos.getText(), edad.getText(), nif.getText()});
                        } catch (SQLException ex) {
                            System.out.println(ex);
                        }
                        tabladeportes.setSelectedIndex(0);
                        nombre.setText("");
                        apellidos.setText("");
                        nif.setText("");
                        edad.setText("");
                        ntenis.setText("" + ttenis.getRowCount());
                        break;
                    default:
                        error.setVisible(true);
                        System.out.println(apellidos.getText() + "," + nombre.getText() + "," + nif.getText() + "," + edad.getText() + (String) deportes.getSelectedItem());
                        break;
                }
            } catch (SQLException ex) {
                Logger.getLogger(TablasDI.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            error.setVisible(true);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void impfutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_impfutMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_impfutMouseClicked

    private void impbalonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_impbalonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_impbalonMouseClicked

    private void imptenisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imptenisMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_imptenisMouseClicked

    private void imptenisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imptenisActionPerformed
        try {
            Connection conexion = DriverManager.getConnection("jdbc:mysql://localhost:3306/deportes", "root", "root");
            String reportSource = "./src/Reporte/reporte_tenis.jasper";
            String reportPDF = "./src/PDF/Informe_Tenis.pdf";
            JasperReport reporte = (JasperReport) JRLoader.loadObjectFromFile(reportSource);
            JasperPrint jasperPrint = JasperFillManager.fillReport(reporte, null, conexion);

            JRExporter exporter = new JRPdfExporter();
            exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
            exporter.setParameter(JRExporterParameter.OUTPUT_FILE, new File(reportPDF));
            exporter.exportReport();

            error.setText("INFORME REALIZADO CON EXITO");
            error.setVisible(true);
        } catch (JRException ex) {
            System.out.println(ex.getMessageKey());
            System.out.println(ex.getMessage());
            System.out.println(ex);
        } catch (SQLException ex) {
            Logger.getLogger(TablasDI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_imptenisActionPerformed

    private void impbalonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_impbalonActionPerformed
        try {
            Connection conexion = DriverManager.getConnection("jdbc:mysql://localhost:3306/deportes", "root", "root");
            String reportSource = "./src/Reporte/reporte_baloncesto.jasper";
            String reportPDF = "./src/PDF/Informe_Baloncesto.pdf";
            JasperReport reporte = (JasperReport) JRLoader.loadObjectFromFile(reportSource);
            JasperPrint jasperPrint = JasperFillManager.fillReport(reporte, null, conexion);

            JRExporter exporter = new JRPdfExporter();
            exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
            exporter.setParameter(JRExporterParameter.OUTPUT_FILE, new File(reportPDF));
            exporter.exportReport();

            error.setText("INFORME REALIZADO CON EXITO");
            error.setVisible(true);
        } catch (JRException ex) {
            System.out.println(ex.getMessageKey());
            System.out.println(ex.getMessage());
            System.out.println(ex);
        } catch (SQLException ex) {
            Logger.getLogger(TablasDI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_impbalonActionPerformed

    private void impfutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_impfutActionPerformed
        try {
            Connection conexion = DriverManager.getConnection("jdbc:mysql://localhost:3306/deportes", "root", "root");
            String reportSource = "./src/Reporte/reporte_futbol.jasper";
            String reportPDF = "./src/PDF/Informe_Futbol.pdf";
            JasperReport reporte = (JasperReport) JRLoader.loadObjectFromFile(reportSource);
            JasperPrint jasperPrint = JasperFillManager.fillReport(reporte, null, conexion);

            JRExporter exporter = new JRPdfExporter();
            exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
            exporter.setParameter(JRExporterParameter.OUTPUT_FILE, new File(reportPDF));
            exporter.exportReport();

            error.setText("INFORME REALIZADO CON EXITO");
            error.setVisible(true);
        } catch (JRException ex) {
            System.out.println(ex.getMessageKey());
            System.out.println(ex.getMessage());
            System.out.println(ex);
        } catch (SQLException ex) {
            Logger.getLogger(TablasDI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_impfutActionPerformed
    public static boolean esEntero(String s) {
        try {
            Integer.parseInt(s);
        } catch (NumberFormatException e) {
            return false;
        } catch (NullPointerException e) {
            return false;
        }
        return true;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TablasDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TablasDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TablasDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TablasDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TablasDI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField apellidos;
    private javax.swing.JComboBox<String> deportes;
    private javax.swing.JTextField edad;
    private javax.swing.JLabel error;
    private javax.swing.JButton impbalon;
    private javax.swing.JButton impfut;
    private javax.swing.JButton imptenis;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField nbaloncesto;
    private javax.swing.JTextField nfutbol;
    private javax.swing.JTextField nif;
    private javax.swing.JTextField nombre;
    private javax.swing.JTextField ntenis;
    private javax.swing.JTabbedPane tabladeportes;
    private javax.swing.JTable tbaloncesto;
    private javax.swing.JTable tfutbol;
    private javax.swing.JTable ttenis;
    // End of variables declaration//GEN-END:variables
}
